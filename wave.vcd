$date
	Mon Dec  2 17:33:38 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testbench $end
$var wire 32 ! writedata [31:0] $end
$var wire 1 " memwrite $end
$var wire 32 # dataadr [31:0] $end
$var reg 1 $ clk $end
$var reg 1 % reset $end
$scope module dut $end
$var wire 1 $ clk $end
$var wire 1 % reset $end
$var wire 32 & writedata [31:0] $end
$var wire 32 ' readdata [31:0] $end
$var wire 32 ( pc [31:0] $end
$var wire 1 " memwrite $end
$var wire 32 ) instr [31:0] $end
$var wire 32 * dataadr [31:0] $end
$scope module dmem $end
$var wire 6 + a [5:0] $end
$var wire 1 $ clk $end
$var wire 32 , rd [31:0] $end
$var wire 1 " we $end
$var wire 32 - wd [31:0] $end
$upscope $end
$scope module imem $end
$var wire 6 . a [5:0] $end
$var wire 32 / rd [31:0] $end
$upscope $end
$scope module mips $end
$var wire 1 $ clk $end
$var wire 32 0 instr [31:0] $end
$var wire 32 1 readdata [31:0] $end
$var wire 1 % reset $end
$var wire 1 2 zero $end
$var wire 32 3 writedata [31:0] $end
$var wire 1 4 regwrite $end
$var wire 1 5 regdst $end
$var wire 1 6 pcsrc $end
$var wire 32 7 pc [31:0] $end
$var wire 1 " memwrite $end
$var wire 1 8 memtoreg $end
$var wire 1 9 jump $end
$var wire 1 : alusrc $end
$var wire 32 ; aluout [31:0] $end
$var wire 3 < alucontrol [2:0] $end
$scope module c $end
$var wire 6 = funct [5:0] $end
$var wire 6 > op [5:0] $end
$var wire 1 6 pcsrc $end
$var wire 1 2 zero $end
$var wire 1 4 regwrite $end
$var wire 1 5 regdst $end
$var wire 1 " memwrite $end
$var wire 1 8 memtoreg $end
$var wire 1 9 jump $end
$var wire 1 ? branch $end
$var wire 1 : alusrc $end
$var wire 2 @ aluop [1:0] $end
$var wire 3 A alucontrol [2:0] $end
$scope module ad $end
$var wire 6 B funct [5:0] $end
$var wire 2 C aluop [1:0] $end
$var reg 3 D alucontrol [2:0] $end
$upscope $end
$scope module md $end
$var wire 6 E op [5:0] $end
$var reg 2 F aluop [1:0] $end
$var reg 1 : alusrc $end
$var reg 1 ? branch $end
$var reg 9 G controls [8:0] $end
$var reg 1 9 jump $end
$var reg 1 8 memtoreg $end
$var reg 1 " memwrite $end
$var reg 1 5 regdst $end
$var reg 1 4 regwrite $end
$upscope $end
$upscope $end
$scope module dp $end
$var wire 3 H alucontrol [2:0] $end
$var wire 1 : alusrc $end
$var wire 1 $ clk $end
$var wire 32 I instr [31:0] $end
$var wire 1 9 jump $end
$var wire 1 8 memtoreg $end
$var wire 1 6 pcsrc $end
$var wire 32 J readdata [31:0] $end
$var wire 1 5 regdst $end
$var wire 1 4 regwrite $end
$var wire 1 % reset $end
$var wire 1 2 zero $end
$var wire 5 K writereg [4:0] $end
$var wire 32 L writedata [31:0] $end
$var wire 32 M srcb [31:0] $end
$var wire 32 N srca [31:0] $end
$var wire 32 O signimmsh [31:0] $end
$var wire 32 P signimm [31:0] $end
$var wire 32 Q result [31:0] $end
$var wire 32 R pcplus4 [31:0] $end
$var wire 32 S pcnextbr [31:0] $end
$var wire 32 T pcnext [31:0] $end
$var wire 32 U pcbranch [31:0] $end
$var wire 32 V pc [31:0] $end
$var wire 32 W aluout [31:0] $end
$scope module alu $end
$var wire 3 X alucontrol [2:0] $end
$var wire 1 2 zero $end
$var wire 32 Y b [31:0] $end
$var wire 32 Z a [31:0] $end
$var reg 32 [ result [31:0] $end
$upscope $end
$scope module immsh $end
$var wire 32 \ y [31:0] $end
$var wire 32 ] a [31:0] $end
$upscope $end
$scope module pcadd1 $end
$var wire 32 ^ b [31:0] $end
$var wire 32 _ y [31:0] $end
$var wire 32 ` a [31:0] $end
$upscope $end
$scope module pcadd2 $end
$var wire 32 a a [31:0] $end
$var wire 32 b b [31:0] $end
$var wire 32 c y [31:0] $end
$upscope $end
$scope module pcbrmux $end
$var wire 32 d d0 [31:0] $end
$var wire 32 e d1 [31:0] $end
$var wire 1 6 s $end
$var wire 32 f y [31:0] $end
$var parameter 32 g WIDTH $end
$upscope $end
$scope module pcmux $end
$var wire 32 h d0 [31:0] $end
$var wire 32 i d1 [31:0] $end
$var wire 1 9 s $end
$var wire 32 j y [31:0] $end
$var parameter 32 k WIDTH $end
$upscope $end
$scope module pcreg $end
$var wire 1 $ clk $end
$var wire 32 l d [31:0] $end
$var wire 1 % reset $end
$var parameter 32 m WIDTH $end
$var reg 32 n q [31:0] $end
$upscope $end
$scope module resmux $end
$var wire 32 o d0 [31:0] $end
$var wire 32 p d1 [31:0] $end
$var wire 1 8 s $end
$var wire 32 q y [31:0] $end
$var parameter 32 r WIDTH $end
$upscope $end
$scope module rf $end
$var wire 1 $ clk $end
$var wire 5 s ra1 [4:0] $end
$var wire 5 t ra2 [4:0] $end
$var wire 32 u wd3 [31:0] $end
$var wire 1 4 we3 $end
$var wire 5 v wa3 [4:0] $end
$var wire 32 w rd2 [31:0] $end
$var wire 32 x rd1 [31:0] $end
$upscope $end
$scope module se $end
$var wire 16 y a [15:0] $end
$var wire 32 z y [31:0] $end
$upscope $end
$scope module srcbmux $end
$var wire 32 { d0 [31:0] $end
$var wire 32 | d1 [31:0] $end
$var wire 1 : s $end
$var wire 32 } y [31:0] $end
$var parameter 32 ~ WIDTH $end
$upscope $end
$scope module wrmux $end
$var wire 5 !" d0 [4:0] $end
$var wire 5 "" d1 [4:0] $end
$var wire 1 5 s $end
$var wire 5 #" y [4:0] $end
$var parameter 32 $" WIDTH $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b101 $"
b100000 ~
b100000 r
b100000 m
b100000 k
b100000 g
$end
#0
$dumpvars
b10 #"
b0 ""
b10 !"
b101 }
b101 |
bx {
b101 z
b101 y
b0 x
bx w
b10 v
b101 u
b10 t
b0 s
b101 q
bx p
b101 o
b0 n
b100 l
b100 j
b10000000000000010100 i
b100 h
b100 f
b11000 e
b100 d
b11000 c
b10100 b
b100 a
b0 `
b100 _
b100 ^
b101 ]
b10100 \
b101 [
b0 Z
b101 Y
b10 X
b101 W
b0 V
b11000 U
b100 T
b100 S
b100 R
b101 Q
b101 P
b10100 O
b0 N
b101 M
bx L
b10 K
bx J
b100000000000100000000000000101 I
b10 H
b101000000 G
b0 F
b1000 E
b10 D
b0 C
b101 B
b10 A
b0 @
0?
b1000 >
b101 =
b10 <
b101 ;
1:
09
08
b0 7
06
05
14
bx 3
02
bx 1
b100000000000100000000000000101 0
b100000000000100000000000000101 /
b0 .
bx -
bx ,
b1 +
b101 *
b100000000000100000000000000101 )
b0 (
bx '
bx &
1%
1$
b101 #
0"
bx !
$end
#5
0$
#10
b101 !
b101 &
b101 -
b101 3
b101 L
b101 w
b101 {
1$
#15
0$
#20
1$
#22
0%
#25
0$
#30
b1100 Q
b1100 q
b1100 u
b11 +
b1100 #
b1100 *
b1100 ;
b1100 W
b1100 [
b1100 o
bx !
bx &
bx -
bx 3
bx L
bx w
bx {
b11 K
b11 v
b11 #"
b1100 M
b1100 Y
b1100 }
b110000 O
b110000 \
b110000 b
b1000 T
b1000 j
b1000 l
b1100 =
b1100 B
b11000000000000110000 i
b11 t
b11 !"
b1100 P
b1100 ]
b1100 z
b1100 |
b1100 y
b1000 S
b1000 f
b1000 h
b100000000000110000000000001100 )
b100000000000110000000000001100 /
b100000000000110000000000001100 0
b100000000000110000000000001100 I
b1 .
b111000 U
b111000 c
b111000 e
b1000 R
b1000 _
b1000 a
b1000 d
b100 (
b100 7
b100 V
b100 `
b100 n
1$
#35
0$
#40
b11 Q
b11 q
b11 u
b0 +
b11 #
b11 *
b11 ;
b11 W
b11 [
b11 o
b1100 N
b1100 Z
b1100 x
b111 K
b111 v
b111 #"
b11111111111111111111111111110111 M
b11111111111111111111111111110111 Y
b11111111111111111111111111110111 }
b11111111111111111111111111011100 O
b11111111111111111111111111011100 \
b11111111111111111111111111011100 b
b1100 T
b1100 j
b1100 l
b110111 =
b110111 B
b1100111111111111111011100 i
b11 s
b111 t
b111 !"
b11111 ""
b11111111111111111111111111110111 P
b11111111111111111111111111110111 ]
b11111111111111111111111111110111 z
b11111111111111111111111111110111 |
b1111111111110111 y
bx !
bx &
bx -
bx 3
bx L
bx w
bx {
b1100 S
b1100 f
b1100 h
b100000011001111111111111110111 )
b100000011001111111111111110111 /
b100000011001111111111111110111 0
b100000011001111111111111110111 I
b10 .
b11111111111111111111111111101000 U
b11111111111111111111111111101000 c
b11111111111111111111111111101000 e
b1100 R
b1100 _
b1100 a
b1100 d
b1000 (
b1000 7
b1000 V
b1000 `
b1000 n
1$
#45
0$
#50
b111 Q
b111 q
b111 u
b1 +
b1 <
b1 A
b1 D
b1 H
b1 X
b111 #
b111 *
b111 ;
b111 W
b111 [
b111 o
15
0:
b10 @
b10 C
b10 F
b110000010 G
b11 N
b11 Z
b11 x
b100 K
b100 v
b100 #"
b101 M
b101 Y
b101 }
b1000000010010100 O
b1000000010010100 \
b1000000010010100 b
b10000 T
b10000 j
b10000 l
b0 >
b0 E
b100101 =
b100101 B
b11100010001000000010010100 i
b111 s
b10 t
b10 !"
b100 ""
b10000000100101 P
b10000000100101 ]
b10000000100101 z
b10000000100101 |
b10000000100101 y
b101 !
b101 &
b101 -
b101 3
b101 L
b101 w
b101 {
b10000 S
b10000 f
b10000 h
b111000100010000000100101 )
b111000100010000000100101 /
b111000100010000000100101 0
b111000100010000000100101 I
b11 .
b1000000010100100 U
b1000000010100100 c
b1000000010100100 e
b10000 R
b10000 _
b10000 a
b10000 d
b1100 (
b1100 7
b1100 V
b1100 `
b1100 n
1$
#55
0$
#60
b100 Q
b100 q
b100 u
b100 #
b100 *
b100 ;
b100 W
b100 [
b100 o
b111 M
b111 Y
b111 }
b0 <
b0 A
b0 D
b0 H
b0 X
b1100 N
b1100 Z
b1100 x
b111 !
b111 &
b111 -
b111 3
b111 L
b111 w
b111 {
b101 K
b101 v
b101 #"
b1010000010010000 O
b1010000010010000 \
b1010000010010000 b
b10100 T
b10100 j
b10100 l
b100100 =
b100100 B
b1100100001010000010010000 i
b11 s
b100 t
b100 !"
b101 ""
b10100000100100 P
b10100000100100 ]
b10100000100100 z
b10100000100100 |
b10100000100100 y
b10100 S
b10100 f
b10100 h
b11001000010100000100100 )
b11001000010100000100100 /
b11001000010100000100100 0
b11001000010100000100100 I
b100 .
b1010000010100100 U
b1010000010100100 c
b1010000010100100 e
b10100 R
b10100 _
b10100 a
b10100 d
b10000 (
b10000 7
b10000 V
b10000 `
b10000 n
1$
#65
0$
#70
b1011 Q
b1011 q
b1011 u
b10 +
b1011 #
b1011 *
b1011 ;
b1011 W
b1011 [
b1011 o
b10 <
b10 A
b10 D
b10 H
b10 X
b100 N
b100 Z
b100 x
b1010000010000000 O
b1010000010000000 \
b1010000010000000 b
b11000 T
b11000 j
b11000 l
b100000 =
b100000 B
b10100100001010000010000000 i
b101 s
b10100000100000 P
b10100000100000 ]
b10100000100000 z
b10100000100000 |
b10100000100000 y
b11000 S
b11000 f
b11000 h
b101001000010100000100000 )
b101001000010100000100000 /
b101001000010100000100000 0
b101001000010100000100000 I
b101 .
b1010000010011000 U
b1010000010011000 c
b1010000010011000 e
b11000 R
b11000 _
b11000 a
b11000 d
b10100 (
b10100 7
b10100 V
b10100 `
b10100 n
1$
#75
0$
#80
06
02
b11 M
b11 Y
b11 }
b1000 Q
b1000 q
b1000 u
b10 +
04
05
1?
b1 @
b1 C
b1 F
b100001 G
b110 <
b110 A
b110 D
b110 H
b110 X
b11 !
b11 &
b11 -
b11 3
b11 L
b11 w
b11 {
b111 K
b111 v
b111 #"
b101000 O
b101000 \
b101000 b
b1000 #
b1000 *
b1000 ;
b1000 W
b1000 [
b1000 o
b11100 T
b11100 j
b11100 l
b100 >
b100 E
b1010 =
b1010 B
b10100111000000000000101000 i
b111 t
b111 !"
b0 ""
b1010 P
b1010 ]
b1010 z
b1010 |
b1010 y
b1011 N
b1011 Z
b1011 x
b11100 S
b11100 f
b11100 h
b10000101001110000000000001010 )
b10000101001110000000000001010 /
b10000101001110000000000001010 0
b10000101001110000000000001010 I
b110 .
b1000100 U
b1000100 c
b1000100 e
b11100 R
b11100 _
b11100 a
b11100 d
b11000 (
b11000 7
b11000 V
b11000 `
b11000 n
1$
#85
0$
#90
12
b0 Q
b0 q
b0 u
b0 +
b111 <
b111 A
b111 D
b111 H
b111 X
b0 #
b0 *
b0 ;
b0 W
b0 [
b0 o
b111 M
b111 Y
b111 }
14
15
0?
b10 @
b10 C
b10 F
b110000010 G
b1100 N
b1100 Z
b1100 x
b111 !
b111 &
b111 -
b111 3
b111 L
b111 w
b111 {
b100 K
b100 v
b100 #"
b1000000010101000 O
b1000000010101000 \
b1000000010101000 b
b100000 T
b100000 j
b100000 l
b0 >
b0 E
b101010 =
b101010 B
b1100100001000000010101000 i
b11 s
b100 t
b100 !"
b100 ""
b10000000101010 P
b10000000101010 ]
b10000000101010 z
b10000000101010 |
b10000000101010 y
b100000 S
b100000 f
b100000 h
b11001000010000000101010 )
b11001000010000000101010 /
b11001000010000000101010 0
b11001000010000000101010 I
b111 .
b1000000011001000 U
b1000000011001000 c
b1000000011001000 e
b100000 R
b100000 _
b100000 a
b100000 d
b11100 (
b11100 7
b11100 V
b11100 `
b11100 n
1$
#95
0$
#100
b0 Q
b0 q
b0 u
b0 +
16
12
b0 #
b0 *
b0 ;
b0 W
b0 [
b0 o
04
05
1?
b1 @
b1 C
b1 F
b100001 G
b110 <
b110 A
b110 D
b110 H
b110 X
b0 N
b0 Z
b0 x
b0 K
b0 v
b0 #"
b100 O
b100 \
b100 b
b0 M
b0 Y
b0 }
b101000 T
b101000 j
b101000 l
b100 >
b100 E
b1 =
b1 B
b10000000000000000000000100 i
b100 s
b0 t
b0 !"
b0 ""
b1 P
b1 ]
b1 z
b1 |
b1 y
b0 !
b0 &
b0 -
b0 3
b0 L
b0 w
b0 {
b101000 S
b101000 f
b101000 h
b10000100000000000000000000001 )
b10000100000000000000000000001 /
b10000100000000000000000000001 0
b10000100000000000000000000001 I
b1000 .
b101000 U
b101000 c
b101000 e
b100100 R
b100100 _
b100100 a
b100100 d
b100000 (
b100000 7
b100000 V
b100000 `
b100000 n
1$
#105
0$
#110
b1 Q
b1 q
b1 u
b0 +
06
b111 <
b111 A
b111 D
b111 H
b111 X
02
b1 #
b1 *
b1 ;
b1 W
b1 [
b1 o
b101 M
b101 Y
b101 }
14
15
0?
b10 @
b10 C
b10 F
b110000010 G
b11 N
b11 Z
b11 x
b101 !
b101 &
b101 -
b101 3
b101 L
b101 w
b101 {
b100 K
b100 v
b100 #"
b1000000010101000 O
b1000000010101000 \
b1000000010101000 b
b101100 T
b101100 j
b101100 l
b0 >
b0 E
b101010 =
b101010 B
b11100010001000000010101000 i
b111 s
b10 t
b10 !"
b100 ""
b10000000101010 P
b10000000101010 ]
b10000000101010 z
b10000000101010 |
b10000000101010 y
b101100 S
b101100 f
b101100 h
b111000100010000000101010 )
b111000100010000000101010 /
b111000100010000000101010 0
b111000100010000000101010 I
b1010 .
b1000000011010100 U
b1000000011010100 c
b1000000011010100 e
b101100 R
b101100 _
b101100 a
b101100 d
b101000 (
b101000 7
b101000 V
b101000 `
b101000 n
1$
#115
0$
#120
b1100 Q
b1100 q
b1100 u
b11 +
b1100 #
b1100 *
b1100 ;
b1100 W
b1100 [
b1100 o
b1011 M
b1011 Y
b1011 }
b10 <
b10 A
b10 D
b10 H
b10 X
b1 N
b1 Z
b1 x
b1011 !
b1011 &
b1011 -
b1011 3
b1011 L
b1011 w
b1011 {
b111 K
b111 v
b111 #"
b1110000010000000 O
b1110000010000000 \
b1110000010000000 b
b110000 T
b110000 j
b110000 l
b100000 =
b100000 B
b10000101001110000010000000 i
b100 s
b101 t
b101 !"
b111 ""
b11100000100000 P
b11100000100000 ]
b11100000100000 z
b11100000100000 |
b11100000100000 y
b110000 S
b110000 f
b110000 h
b100001010011100000100000 )
b100001010011100000100000 /
b100001010011100000100000 0
b100001010011100000100000 I
b1011 .
b1110000010110000 U
b1110000010110000 c
b1110000010110000 e
b110000 R
b110000 _
b110000 a
b110000 d
b101100 (
b101100 7
b101100 V
b101100 `
b101100 n
1$
#125
0$
#130
b111 Q
b111 q
b111 u
b1 +
b111 #
b111 *
b111 ;
b111 W
b111 [
b111 o
b101 M
b101 Y
b101 }
b110 <
b110 A
b110 D
b110 H
b110 X
b1100 N
b1100 Z
b1100 x
b101 !
b101 &
b101 -
b101 3
b101 L
b101 w
b101 {
b1110000010001000 O
b1110000010001000 \
b1110000010001000 b
b110100 T
b110100 j
b110100 l
b100010 =
b100010 B
b11100010001110000010001000 i
b111 s
b10 t
b10 !"
b11100000100010 P
b11100000100010 ]
b11100000100010 z
b11100000100010 |
b11100000100010 y
b110100 S
b110100 f
b110100 h
b111000100011100000100010 )
b111000100011100000100010 /
b111000100011100000100010 0
b111000100011100000100010 I
b1100 .
b1110000010111100 U
b1110000010111100 c
b1110000010111100 e
b110100 R
b110100 _
b110100 a
b110100 d
b110000 (
b110000 7
b110000 V
b110000 `
b110000 n
1$
#135
0$
#140
02
b1000100 M
b1000100 Y
b1000100 }
b1010000 Q
b1010000 q
b1010000 u
b10100 +
04
05
1:
1"
b0 @
b0 C
b0 F
b1010000 G
b10 <
b10 A
b10 D
b10 H
b10 X
b111 !
b111 &
b111 -
b111 3
b111 L
b111 w
b111 {
b111 K
b111 v
b111 #"
b100010000 O
b100010000 \
b100010000 b
b1010000 #
b1010000 *
b1010000 ;
b1010000 W
b1010000 [
b1010000 o
b111000 T
b111000 j
b111000 l
b101011 >
b101011 E
b100 =
b100 B
b1100111000000000100010000 i
b11 s
b111 t
b111 !"
b0 ""
b1000100 P
b1000100 ]
b1000100 z
b1000100 |
b1000100 y
b1100 N
b1100 Z
b1100 x
b111000 S
b111000 f
b111000 h
b10101100011001110000000001000100 )
b10101100011001110000000001000100 /
b10101100011001110000000001000100 0
b10101100011001110000000001000100 I
b1101 .
b101001000 U
b101001000 c
b101001000 e
b111000 R
b111000 _
b111000 a
b111000 d
b110100 (
b110100 7
b110100 V
b110100 `
b110100 n
1$
#145
0$
#150
b111 Q
b111 q
b111 u
14
0"
18
b101001000 G
b0 N
b0 Z
b0 x
b101 !
b101 &
b101 -
b101 3
b101 L
b101 w
b101 {
b10 K
b10 v
b10 #"
b1010000 M
b1010000 Y
b1010000 }
b101000000 O
b101000000 \
b101000000 b
b111100 T
b111100 j
b111100 l
b100011 >
b100011 E
b10000 =
b10000 B
b10000000000101000000 i
b0 s
b10 t
b10 !"
b1010000 P
b1010000 ]
b1010000 z
b1010000 |
b1010000 y
b111100 S
b111100 f
b111100 h
b10001100000000100000000001010000 )
b10001100000000100000000001010000 /
b10001100000000100000000001010000 0
b10001100000000100000000001010000 I
b1110 .
b111 '
b111 ,
b111 1
b111 J
b111 p
b101111100 U
b101111100 c
b101111100 e
b111100 R
b111100 _
b111100 a
b111100 d
b111000 (
b111000 7
b111000 V
b111000 `
b111000 n
1$
#155
0$
#160
12
bx '
bx ,
bx 1
bx J
bx p
b0 +
b0 Q
b0 q
b0 u
b0 #
b0 *
b0 ;
b0 W
b0 [
b0 o
04
0:
08
19
b100 G
b0 K
b0 v
b0 #"
b0 M
b0 Y
b0 }
b1000100 O
b1000100 \
b1000100 b
b1000100 T
b1000100 j
b1000100 l
b10 >
b10 E
b10001 =
b10001 B
b1000100 i
b0 t
b0 !"
b10001 P
b10001 ]
b10001 z
b10001 |
b10001 y
b0 !
b0 &
b0 -
b0 3
b0 L
b0 w
b0 {
b1000000 S
b1000000 f
b1000000 h
b1000000000000000000000010001 )
b1000000000000000000000010001 /
b1000000000000000000000010001 0
b1000000000000000000000010001 I
b1111 .
b10000100 U
b10000100 c
b10000100 e
b1000000 R
b1000000 _
b1000000 a
b1000000 d
b111100 (
b111100 7
b111100 V
b111100 `
b111100 n
1$
#165
0$
#170
b1010100 Q
b1010100 q
b1010100 u
b10101 +
02
b1010100 #
b1010100 *
b1010100 ;
b1010100 W
b1010100 [
b1010100 o
b1010100 M
b1010100 Y
b1010100 }
1:
1"
09
b1010000 G
b1001000 T
b1001000 j
b1001000 l
b111 !
b111 &
b111 -
b111 3
b111 L
b111 w
b111 {
b10 K
b10 v
b10 #"
b101010000 O
b101010000 \
b101010000 b
b101011 >
b101011 E
b10100 =
b10100 B
b10000000000101010000 i
b10 t
b10 !"
b1010100 P
b1010100 ]
b1010100 z
b1010100 |
b1010100 y
b1001000 S
b1001000 f
b1001000 h
b10101100000000100000000001010100 )
b10101100000000100000000001010100 /
b10101100000000100000000001010100 0
b10101100000000100000000001010100 I
b10001 .
b110011000 U
b110011000 c
b110011000 e
b1001000 R
b1001000 _
b1001000 a
b1001000 d
b1000100 (
b1000100 7
b1000100 V
b1000100 `
b1000100 n
1$
#175
